document.addEventListener('DOMContentLoaded', (event) => {
    console.log(document.getElementById('myInput').value);

    document.getElementById("startGameBtn").addEventListener('click', function() {
        if (isUserLoggedIn()) {
            window.location.href = "play.html";
        } else {
            alert("請先登入");
        }
    });
    
    document.getElementById('menuToggle').addEventListener('click', toggleNav);
    document.getElementById('game-start').addEventListener('click', checkLoginAndRedirect);
    
    initCoinsAndPn();
    initInputControls();
});



-- 創建 users 資料表
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,  -- 建議使用加密後的密碼
    email VARCHAR(255) UNIQUE,
    date_joined DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_login DATETIME
);

-- 創建 wallet 資料表
CREATE TABLE wallet (
    wallet_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    coins INT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- 創建 user_bag 資料表
CREATE TABLE user_bag (
    bag_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    card_type CHAR(1) NOT NULL,  -- 使用 CHAR(1) 存儲 "A", "B", "C", "D"
    quantity INT DEFAULT 1,
    UNIQUE(user_id, card_type),  -- 確保每個用戶的每種卡片只有一個條目
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);






CREATE TABLE card_images (
    image_id INT AUTO_INCREMENT PRIMARY KEY,
    card_type CHAR(1) NOT NULL UNIQUE,  -- 使用 CHAR(1) 存儲 "A", "B", "C", "D"
    image_url VARCHAR(255) NOT NULL
);

CREATE TABLE mining_area (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    card_type VARCHAR(255) NOT NULL,
    quantity INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);



INSERT INTO card_images (card_type, image_url) VALUES
('A', '/images/pok/A.png'),
('B', '/images/pok/B.png'),
('C', '/images/pok/C.png'),
('D', '/images/pok/D.png'),
('E', '/images/pok/E.png'),
('F', '/images/pok/F.png'),
('G', '/images/pok/G.png'),
('H', '/images/pok/H.png'),
('I', '/images/pok/I.png'),
('K', '/images/pok/K.png'),
('L', '/images/pok/L.png'),
('M', '/images/pok/M.png'),
('N', '/images/pok/N.png'),
('O', '/images/pok/O.png'),
('P', '/images/pok/P.png'),
('Q', '/images/pok/Q.png'),  
('R', '/images/pok/R.png'),
('S', '/images/pok/S.png'),
('T', '/images/pok/T.png'),
('U', '/images/pok/U.png'),
('V', '/images/pok/V.png'),
('W', '/images/pok/W.png'),
('X', '/images/pok/X.png'),
('Y', '/images/pok/Y.png'),
('Z', '/images/pok/Z.png'),
('AA', '/images/pok/AA.png'),
('AB', '/images/pok/AB.png'),
('AC', '/images/pok/AC.png'),
('AD', '/images/pok/AD.png');



